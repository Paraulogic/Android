plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

apply from: './version.gradle'

android {
    compileSdk 33

    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())

    defaultConfig {
        applicationId "com.arnyminerz.paraulogic"
        minSdk 21
        targetSdk 33
        versionCode findProperty("android.versionCode") as Integer
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }
    }

    // Configures the APK and AAB signing config
    signingConfigs {
        release {
            def props = new Properties()
            file("${rootDir}/local.properties").withInputStream { props.load(it) }

            storeFile file("${rootDir}/keystore.jks")
            storePassword props.getProperty("SIGNING_KEY_PASSWORD")
            keyAlias props.getProperty("SIGNING_KEY_ALIAS")
            keyPassword props.getProperty("SIGNING_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

// This increases version code on release
android.applicationVariants.all { variant ->
    if (variant.buildType.name == "release") {
        variant.assemble.doLast {
            def versionPropsFile = file("../gradle.properties")
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            def code = versionProps['android.versionCode'].toInteger() + 1
            versionProps['android.versionCode'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
            logger.lifecycle("Increased version code to $code")
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'com.google.android.material:material:1.7.0-alpha02'
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.appcompat:appcompat:1.6.0-alpha05"

    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    // Jetpack Compose - Material
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.activity:activity-compose:$activity_version"

    // Jetpack Compose - Material 3
    implementation 'androidx.compose.material3:material3:1.0.0-alpha14'

    // Jetpack Compose - Async
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

    // Jetpack Compose - Accompanist
    implementation 'com.google.accompanist:accompanist-pager:0.24.13-rc'

    // Lifecycle async components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Datastore Preferences
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // Room Data Storage
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Timber Logger
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Play Services
    implementation 'com.google.android.gms:play-services-games:22.0.1'
    implementation 'com.google.android.gms:play-services-auth:20.2.0'

    // Play Services - KotlinX coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:29.1.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'

    // Coil Image Loading
    implementation 'io.coil-kt:coil-compose:2.1.0'

    // Billing
    def billing_version = "5.0.0"
    implementation "com.android.billingclient:billing-ktx:$billing_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
}

apply plugin: 'com.google.gms.google-services'
